<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

	<!--
		This configuration file was written by the eclipse-cs plugin
		configuration editor
	-->
	<!--
		Checkstyle-Configuration: Ecars Payment Service LW Checks Description:
		none
	-->
<module name="Checker">
	<property name="severity" value="warning" />
	<property name="basedir" value="${basedir}" />

	<!--
		Mutes audit events for Check errors according to a specified
		suppressions XML document
	-->
	<!--
		See http://checkstyle.sourceforge.net/config.html#filters
	-->
	<!--
	<module name="SuppressionFilter">
		<property name="file"
			value="@{vobRoot}/standards_vob/ecg_standards/java/checkstyle/empty_suppressions_file.xml" />
	</module>
	-->

	<!-- Checks for whitespace                               -->
	<!-- See http://checkstyle.sf.net/config_whitespace.html -->
	<!-- Code formatter handles most of these -->
    <!-- <module name="FileTabCharacter">
        <property name="severity" value="error" />
    </module> -->
    <module name="FileTabCharacter">
	    <property name="eachLine" value="false"/>
	    <property name="severity" value="warning" />
    </module>

	<module name="RegexpSingleline">
		<!--
			'.' matches any character, so we need to escape it and use '\.' to
			match dots.
		-->
		<property name="format" value="org\.apache\.log4j" />
		<property name="message"
			value="Use Jakarta Commons Logging instead of Log4J." />
		<property name="severity" value="error" />
	</module>

	<!-- Miscellaneous other checks.                   -->
	<!-- See http://checkstyle.sf.net/config_misc.html -->
	<module name="RegexpSingleline">
		<!--
			'.' matches any character, so we need to escape it and use '\.' to
			match dots.
		-->
		<property name="format" value="System\.out\.println" />
		<property name="message" value="System.out.println() found" />
		<property name="severity" value="info" />
	</module>
	<module name="RegexpSingleline">
		<property name="format" value="System\.out" />
		<property name="message"
			value="Application Code should not interact with System.out" />
	</module>
	<module name="RegexpSingleline">
		<property name="format" value="System\.err" />
		<property name="message"
			value="Application Code should not interact with System.err" />
	</module>
	<module name="RegexpSingleline">
		<property name="format" value="\.printStackTrace\(\)" />
		<property name="message"
			value="Application Code should not interact with the console. (.printStackTrace())" />
	</module>
	<module name="RegexpSingleline">
		<property name="format"
			value="\.(trace|debug|info|warning|error|fatal)\(.*\.getMessage\(\)" />
		<property name="message"
			value="Pass exceptions directly to logging framework.  Do not concat message." />
	</module>

	<module name="FileLength">
		<property name="max" value="2000" />
		<property name="severity" value="info" />
	</module>

	<module name="SuppressionCommentFilter" />

	<!-- Checks that a package.html file exists for each package.     -->
	<!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
	<!--
		COMMENTED OUT UNTIL CAN FIGURE OUT HOW TO IGNORE UT's LOCALLY AND ON
		BUILD SERVER
	-->
	<!--	<module name="JavadocPackage">-->
	<!--		<property name="severity" value="error" />-->
	<!--	</module>-->

	<module name="TreeWalker">
		<property name="severity" value="error" />
		<module name="FileContentsHolder" />
		<!--
			<module name="IllegalCatch"> <property name="illegalClassNames"
			value="java.lang.Exception, java.lang.Throwable, java.lang.Error,
			java.lang.RuntimeException"/> </module> <module name="IllegalThrows">
			<property name="illegalClassNames" value="java.lang.Exception,
			java.lang.Throwable, java.lang.Error, java.lang.RuntimeException"/>
			</module>
		-->
		<module name="FallThrough" />
		<module name="MultipleStringLiterals">
			<property name="allowedDuplicates" value="3" />
		</module>
		<module name="EqualsAvoidNull" />
		<module name="MagicNumber" />
		<module name="ModifiedControlVariable" />
		<module name="NoFinalizer" />
		<module name="PackageDeclaration" />
		<module name="NPathComplexity" />
		<module name="JavaNCSS" />
		<module name="IllegalInstantiation">
			<property name="classes"
				value="java.lang.Boolean,java.lang.Integer,java.lang.Short,java.lang.Long,java.lang.Double,java.lang.Float,java.lang.String,java.lang.Character,java.lang.Byte,java.lang.StringBuffer" />
			<property name="severity" value="error" />
		</module>
		<module name="IllegalType">
			<property name="illegalClassNames" value="java.lang.StringBuffer" />
		</module>
		<!-- Checks for Javadoc comments.                     -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<module name="JavadocMethod">
			<property name="scope" value="protected" />
			<property name="allowUndeclaredRTE" value="false" />
			<property name="allowThrowsTagsForSubclasses" value="false" />
			<property name="allowMissingParamTags" value="false" />
			<property name="allowMissingThrowsTags" value="false" />
			<property name="allowMissingReturnTag" value="false" />
			<property name="severity" value="error" />
		</module>
		<module name="JavadocType">
			<property name="scope" value="protected" />
			<property name="severity" value="error" />
		</module>
		<module name="JavadocVariable">
			<property name="scope" value="protected" />
			<property name="severity" value="error" />
		</module>
		<module name="JavadocStyle">
			<property name="scope" value="protected" />
			<property name="checkFirstSentence" value="true" />
			<property name="checkEmptyJavadoc" value="false" />
			<property name="checkHtml" value="true" />
			<property name="severity" value="error" />
		</module>
		<!-- End check for Javadoc comments.                   -->
		<!-- Begin code checks. -->
		<!-- Checks for Naming Conventions.                  -->
		<!-- See http://checkstyle.sf.net/config_naming.html -->
		<module name="ConstantName">
			<property name="format" value="^[A-Z]([A-Z0-9_]*[A-Z0-9])?$" />
			<property name="severity" value="error" />
		</module>
		<module name="LocalFinalVariableName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
			<property name="severity" value="error" />
		</module>
		<module name="LocalVariableName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
			<property name="severity" value="error" />
		</module>
		<module name="MemberName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
			<property name="severity" value="error" />
		</module>
		<module name="MethodName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
			<property name="severity" value="error" />
		</module>
		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-zA-Z_][a-zA-Z_0-9]*)*$" />
			<property name="severity" value="error" />
		</module>
		<module name="ParameterName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
			<property name="severity" value="error" />
		</module>
		<module name="StaticVariableName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
			<property name="severity" value="error" />
		</module>
		<module name="TypeName">
			<property name="format" value="^[A-Z][a-zA-Z0-9_]*$" />
			<property name="severity" value="error" />
		</module>

		<!-- Checks for imports                              -->
		<!-- See http://checkstyle.sf.net/config_import.html -->
		<module name="AvoidStarImport">
			<property name="severity" value="error" />
		</module>
		<module name="IllegalImport"> <!-- defaults to sun.* packages -->
			<property name="severity" value="error" />
		</module>
		<module name="RedundantImport">
			<property name="severity" value="error" />
		</module>
		<module name="UnusedImports">
			<property name="severity" value="error" />
		</module>

		<!-- Modifier Checks                                    -->
		<!-- See http://checkstyle.sf.net/config_modifiers.html -->
		<module name="ModifierOrder">
			<property name="severity" value="error" />
		</module>
		<module name="RedundantModifier">
			<property name="severity" value="error" />
		</module>

		<!-- Checks for blocks. You know, those {}'s         -->
		<!-- See http://checkstyle.sf.net/config_blocks.html -->
		<!-- Code formatter handles many of these -->
		<module name="AvoidNestedBlocks">
			<property name="severity" value="error" />
		</module>
		<module name="EmptyBlock">
			<property name="option" value="text" />
			<property name="severity" value="error" />
		</module>

		<!-- Checks for common coding problems               -->
		<!-- See http://checkstyle.sf.net/config_coding.html -->
		<!-- <module name="DoubleCheckedLocking">
			<property name="severity" value="error" />
		</module>-->
		<module name="EmptyStatement">
			<property name="severity" value="error" />
		</module>
		<module name="EqualsHashCode">
			<property name="severity" value="error" />
		</module>
		<module name="InnerAssignment">
			<property name="severity" value="error" />
		</module>
		<module name="MissingSwitchDefault">
			<property name="severity" value="error" />
		</module>
		<module name="RedundantThrows">
			<property name="allowUnchecked" value="true" />
			<property name="allowSubclasses" value="true" />
			<property name="severity" value="error" />
		</module>
		<module name="DefaultComesLast">
			<property name="severity" value="error" />
		</module>
		<module name="CovariantEquals">
			<property name="severity" value="error" />
		</module>
		<module name="JUnitTestCase">
			<property name="severity" value="error" />
		</module>
		<module name="StringLiteralEquality">
			<property name="severity" value="error" />
		</module>

		<!-- Checks for class design                         -->
		<!-- See http://checkstyle.sf.net/config_design.html -->
		<module name="HideUtilityClassConstructor">
			<property name="severity" value="error" />
		</module>
		<module name="InterfaceIsType">
			<property name="severity" value="error" />
		</module>
		<module name="VisibilityModifier">
			<property name="protectedAllowed" value="true" />
			<property name="severity" value="error" />
		</module>

		<!-- Miscellaneous other checks.                   -->
		<!-- See http://checkstyle.sf.net/config_misc.html -->
		<module name="UpperEll">
			<property name="severity" value="error" />
		</module>
		<!-- End code checks. -->
		<!-- Begin todo checks. -->
		<!-- Checks for common coding problems               -->
		<!-- See http://checkstyle.sf.net/config_coding.html -->
		<module name="SimplifyBooleanExpression">
			<property name="severity" value="info" />
		</module>
		<module name="SimplifyBooleanReturn">
			<property name="severity" value="info" />
		</module>

		<module name="TodoComment">
			<property name="severity" value="info" />
		</module>

		<!-- Checks for Size Violations.                    -->
		<!-- See http://checkstyle.sf.net/config_sizes.html -->
		<module name="MethodLength">
			<property name="max" value="150" />
			<property name="severity" value="info" />
		</module>
		<module name="ParameterNumber">
			<property name="max" value="10" />
			<property name="severity" value="info" />
		</module>
		<module name="ExecutableStatementCount">
			<property name="max" value="100" />
			<property name="severity" value="info" />
		</module>

		<!-- Checks for common coding problems                         -->
		<!-- See http://checkstyle.sourceforge.net/config_metrics.html -->
		<module name="CyclomaticComplexity">
			<property name="severity" value="info" />
		</module>
		<module name="WhitespaceAfter"/>
		<module name="WhitespaceAround"/>
		<!-- End todo checks. -->
	</module>
</module>
